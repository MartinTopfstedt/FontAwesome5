# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/FontAwesome5.sln'
  nuspec: 'src/NuGet/FontAwesome5.nuspec'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'core'
    configFilePath: 'build/GitVersion.yml'
    updateAssemblyInfo: true

- script: echo %Action%%BuildVersion%
  displayName: 'Set build version'
  env:
    Action: '##vso[build.updatebuildnumber]'
    BuildVersion: $(GitVersion.NuGetVersionV2)

- task: UseDotNet@2
  displayName: 'Install .NET Core'
  inputs:
    packageType: 'sdk'
    version: '5.x'
    includePreviewVersions: true
    performMultiLevelLookup: true

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 
    checkLatest: true

- task: NuGetCommand@2
  displayName: 'NuGet Restore (All Solutions)'
  inputs:
    command: 'restore'
    restoreSolution: 'src/*.sln'
    feedsToUse: 'select'
    verbosityRestore: 'Normal'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore (All Solutions)'
  inputs:
    command: 'restore'
    projects: 'src/*.sln'
    feedsToUse: 'select'

- task: CmdLine@2
  displayName: 'Update FontAwesome SubModule'
  inputs:
    script: |
      git submodule update --recursive --remote
    workingDirectory: '.'

- task: DotNetCoreCLI@2
  displayName: 'Build: Net Core'
  inputs:
    command: 'build'
    projects: 'src/FontAwesome5.Net.sln'
    arguments: '--configuration $(buildConfiguration) /p:Version=$(GitVersion.AssemblySemVer);AssemblyVersion=$(GitVersion.AssemblySemVer);FileVersion=$(GitVersion.AssemblySemFileVer)'

- task: VSBuild@1
  displayName: 'Build: UWP'
  inputs:
    solution: 'src/FontAwesome5.UWP.sln'
    msbuildArgs: '/p:Version=$(GitVersion.AssemblySemVer);AssemblyVersion=$(GitVersion.AssemblySemVer);FileVersion=$(GitVersion.AssemblySemFileVer)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSBuild@1
  displayName: 'Build: WinUI'
  inputs:
    solution: 'src/FontAwesome5.WinUI.sln'
    msbuildArgs: '/p:Version=$(GitVersion.AssemblySemVer);AssemblyVersion=$(GitVersion.AssemblySemVer);FileVersion=$(GitVersion.AssemblySemFileVer)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: 'pack'
    packagesToPack: '$(nuspec)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersionV2'
    includeSymbols: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: FontAwesome5'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'FontAwesome5'